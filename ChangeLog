------------------- Released version 1.1.1 ---------------------------

- Two new environment variables were introduced to configure the
  measurement:

  - SCOREP_CUDA_BUFFER to specify the size of the CUDA record buffer.

  - SCOREP_PROFILING_ENABLE_CORE_FILES to enable additional debug
    output for inconsistent profiles (see documentation for details ).

- There are two new and one enhanced options to the scorep command:

  - The new options --pomp and --nopomp en/disbale semi-automatic pomp
    user instrumentation. By default, it is enabled if OPARI2
    instrumentation is used.

  - The enhanced option --opari[="<parameter-list>"] now accepts a
    list of parameters that is passed to OPARI2, e.g., to disable
    specific OpenMP constructs from being instrumented.

- There were several fixes and enhancements in the instrumenter:

  - If given on the application's compile commandline, pass compiler
    specific free-form and fix-form options to OPARI2 as --free-form
    and --fix-form, respectively

  - The filtering implementation in the PGI compiler adapter induced
    significant overhead. This was significantly reduced.

  - It is now possible run experiments with OPARI2-only
    instrumentation.

  - Fixed segfaulting error handling in the CUDA adapter.

  - Fixed PDT instrumentation problems on ARM platforms.

  - The scorep command now rejects invalid option combinations (like
    --pdt and --nouser) and prints an error message.

  - The scorep option --nocuda, --nopdt, and --nocobi can now be used
    even if the the installation does not support CUDA/PDT/COBI. In
    this case, the options are ignored.

  - Fixed instrumentation problems for the configuration
    PGI/C++/OpenMP/(PDT|User).

  - If the applications's compiler is nvcc, add scorep's linker
    options as -Xlinker.

  - Redundant output from scorep-config was removed.

  - Dependent shared libraries (e.g., CUDA, PAPI) are now correctly
    located by the runtime loader. Modifying LD_LIBRARY_PATH is no
    longer necessary.

  - OpenMP applications instrumented with PDT and OPARI2 were lacking
    the PDT instrumented regions. This is fixed now.

  - Applications using a combined compile-link command couldn't be
    instrumented with OPARI2 as the generated POMP2_Init_regions
    object file failed to link. This is fixed now.

  - Application's linker options now stay in the specified order to
    prevent link failures.

  - No POMP2_Init_regions object file is created when the application
    creates a shared library. Only the application's final link step
    creates the POMP2_Init_regions object file.

  - Compiler flags that may impact performance but that are needed by
    Score-P, e.g., -g to get debug symbols, are now added at the
    beginning of the compile command to allow following options to
    minimize the performance impact (e.g., with Intel compilers the
    options -g -O3 and -O3 -g make the latter one to perform worse).

  - Fortran applications that use OpenMP can now be instrumented with
    PDT.

  - The new Intel compiler options -offload-option and
    -offload-attribute-target were misinterpreted as "-o
    ffload-option" and "-o ffload-attribute-target". This is fixed
    now.

  - The scorep command was made more robust in cases where incomplete
    arguments were provided.

- There were a few fixes and enhancements in the buildsystem:

  - The checks for libcuda, libcudart, and libcupti are now more robust.

  - When installing the Score-P libraries we now follow the OS
    distribution's conventions for installing libraries (either in
    <prefix>/lib or <prefix>/lib64)

  - A failing clock_gettime configure check was fixed.

- Miscellanea:

  - The MPI adapter part dealing with one-sided communication was
    fixed.

  - The documentation was improved.

  - scorep-score's upper-bound trace size approximation is now in
    bytes as compared to some fictional unit it was in previous
    releases.

  - Online access functionality on AIX systems was improved.

  - A bug in creating TAU snapshot profile output was fixed.

  - System tree information on BlueGene/Q systems now contains
    relationships between racks, midplanes, nodeboards, and nodecards.

------------------- Released version 1.1.1-rc1 -----------------------

- Score-P's library installation directory matches the system library
  directory (lib/lib64). Installation directory and the flags returned
  by scorep-config now match.

- Uninitialized POMP regions are initialized on the fly. Necessary if
  pre-instrumented shared-libraries are involved.

- Several fixes related to the order of libraries in the link-step.

- Remove redundancy in the Score-P link-step.

- Provide options to the Score-P instrumenter to pass options to
  opari2, cobi and pdt.

- Fix segfault that occurred when the online access interface
  reconfigures the measurement system.

- Prevent generation of POMP2_Init_regions object file if compile
  command creates a shared library rather than an executable.

- If PDT and Opari2 were applied to a Fortran file, the OpenMP regions
  did not show up, fixed.

- Add LD_RUN_PATH contents (at instrumentation time) as rpath options
  to Score-P's link line.

------------------- Released version 1.1 -----------------------------

- Rewind, a new event-trace recording mode for long-running
  experiments, triggered by user-instrumentation macros. Writes
  semantics information in OTF2 anchor file as rewind might affect
  analysis.
- ARM support (detection + compiler adapter).
- Metric service improvements. Support for per-process metrics and
  per-system-tree-class metrics.
- Support for OpenMP-task profiling and tracing alongside with
  improvements of the POMP adapter.
- Component separation: Score-P can now use pre-installed OTF2,
  OPARI2, and CUBE packages instead of the internal ones.
  - Removed dependency to external repository that was used by
    Score-P, OTF2, and OPARI2 in order to prevent version conflicts.
- Support for CUDA profiling and tracing.
- Easier experiment configuration via scorep-info which porvides a
  list of all measurement configuration variables.
- scorep-info also provides the improved configure-summary of the
  installation.
- Scoring of profile experiments via scorep-score (if configured with
  external CUBE) to prepare a filter for subsequent trace experiment.
- Documentation improvements.
- Numereous configure improvements. Let external libraries use
  generic configure options (tbc). Fixed portability issues.
- Numerous instrumenter improvements. All possible combinations of
  options supported.
- MPI profiling improvements.
- OpenMP nesting supported altough little tested.
- Several compiler-dependent OpenMP-related bugfixes.

------------------- Released version 1.0.2 ---------------------------

- Several instrumentation fixes:
  - Improvements for PDT Fortran instrumentation.
  - Improvements for C++ user instrumentation.
  - Return real failure if instrumentation is erroneous. Failures may
    went undetected previously.
  - Allow for out-of-place builds.
  - Provide correct parameter to SCOREP_USER_REGION_ENTER macro.

- Provide correct timestamp to OmpTaskCreate events.

- Fix invalid order of arguments provided to MpiCollectiveEnd events.

- Fix bug in parameter profiling.

- Enable SIONlib support, currently just for MPI applications. 

- Various fixes for the generated OpenMP region names:
  - Inner and outer blocks got different names.
  - Regions with the ordered clause got a special name.
  - All region names got it '@file:lno' appended, to make them distinguishable.

------------------- Released version 1.0.1 ---------------------------

- Renaming of the configure related variable LD_FLAGS_FOR_BUILD to
  LDFLAGS_FOR_BUILD for consistency.

- Renaming of installed tool and options for consistency, i.e.
  changing underscores to dashes. Also, the --(no)openmp_support
  option changed to --(no)openmp.

- Improved linking on AIX systems.

- Robustness improvements when instrumenting with PDT.

- On x86 platforms, be more cautious using the tsc counter. If
  /proc/cpuinfo reports constant_tsc but not nonstop_tsc, then it is
  likely that the counter is unreliable.

- Improved configure summary.

- configure will not fail if -q or --silent is passed.


------------------- Released version 1.0 -----------------------------
