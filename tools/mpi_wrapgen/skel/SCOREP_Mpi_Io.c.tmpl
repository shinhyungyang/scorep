/**
 * @file
 * @ingroup    MPI_Wrapper
 *
 * @brief C interface wrappers for parallel I/O
 */

#include <config.h>
/* We do wrap deprecated functions here, but we don't want warnings */
#define OMPI_WANT_MPI_INTERFACE_WARNING 0
#include "SCOREP_Mpi.h"
#include <SCOREP_InMeasurement.h>
#include <SCOREP_Events.h>

/**
 * @name C wrappers for administrative functions
 * @{
 */

#pragma wrapgen multiple regex(MPI_File.*(open|close|delete|get_[abgipstv]|set_[abgipstv]|seek|sync).*) skel/SCOREP_Mpi_Std.w
#pragma wrapgen single MPI_Register_datarep skel/SCOREP_Mpi_Std.w

/**
 * @}
 * @name C wrappers for access functions
 * @{
 */

/* MPI Implementation which use ROMIO can have no general support for MPI_Requests
   in asynchronous file IO operations. This leads to a different signature and
   thus to compiler errors. To avoid compilation errors, the asynchronous file
   IO functions are not wrapped if ROMIO is used and they support no general
   MPI_Requests.
*/
#if !defined(ROMIO_VERSION) || defined(MPIO_USES_MPI_REQUEST)

#pragma wrapgen multiple regex(MPI_File.*(iread|iwrite).*$)  skel/SCOREP_Mpi_Std.w

#endif /* !defined(ROMIO_VERSION) || defined(MPIO_USES_MPI_REQUEST) */

#pragma wrapgen multiple regex(MPI_File.*(_read|_write).*$)  skel/SCOREP_Mpi_Std.w

/**
 * @}
 * @name C wrappers for error handling functions
 * @{
 */

#pragma wrapgen multiple restrict(gio_err)  skel/SCOREP_Mpi_Std.w

/**
 * @}
 * @name Fortran wrappers for handle conversion functions
 * @{
 */

#pragma wrapgen multiple restrict(gio_misc+!n_c2f+!n_f2c) skel/SCOREP_Mpi_Std.w

