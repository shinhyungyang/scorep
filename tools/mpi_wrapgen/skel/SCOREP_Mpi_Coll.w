${guard:start}
/**
 * Measurement wrapper for ${name}
 * @note Auto-generated by wrapgen from template: coll.w
 * @note C interface
 * @note Introduced with MPI-${mpi:version}
 * @ingroup ${group|lowercase}
 * It wraps the mpi call with an enter and exit event. Additionally, a collective
 * event is generated in between the enter and exit event after the PMPI call.
 */
${proto:c} 
{
  ${rtype} return_val;

  if (SCOREP_MPI_IS_EVENT_GEN_ON_FOR(SCOREP_MPI_ENABLED_${group|uppercase}))
    {
      ${decl}
      SCOREP_MPI_EVENT_GEN_OFF();
      ${xblock}
      /* Enters region too. */
      uint64_t start_time_stamp
        = SCOREP_MpiCollectiveBegin(scorep_mpi_regid[SCOREP__${name|uppercase}]);

      return_val = ${call:pmpi};
      
      ${guard:hooks}
        ${check:hooks}
          ${call:posthook};
      ${guard:end}

      /* Leaves region too. */
      SCOREP_MpiCollectiveEnd(scorep_mpi_regid[SCOREP__${name|uppercase}],
                              SCOREP_MPI_COMM_HANDLE(comm),
                              root_loc,
                              SCOREP_COLLECTIVE_${name|uppercase},
                              ${mpi:sendcount},
                              ${mpi:recvcount});

      SCOREP_MPI_EVENT_GEN_ON();
    }
  else
    {
      return_val = ${call:pmpi};
    }

  return return_val;
}
${guard:end}
