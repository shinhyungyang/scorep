/* 
 * This file is part of the Score-P software (http://www.score-p.org)
 *
 * Copyright (c) 2009-2012, 
 *    RWTH Aachen, Germany
 *    Gesellschaft fuer numerische Simulation mbH Braunschweig, Germany
 *    Technische Universitaet Dresden, Germany
 *    University of Oregon, Eugene, USA
 *    Forschungszentrum Juelich GmbH, Germany
 *    German Research School for Simulation Sciences GmbH, Juelich/Aachen, Germany
 *    Technische Universitaet Muenchen, Germany
 *
 * See the COPYING file in the package base directory for details.
 *
 */


                        Score-P v1.0.2 OPEN ISSUES
                        ==========================

                                                           Status: June 2012

This file lists known limitations and unimplemented features of
various Score-P components.

--------------------------------------------------------------------------------

* Platform support

  - Score-P has been tested on the following platforms:
    + IBM Blue Gene/P, only static libraries supported
    + IBM SP & BladeCenter clusters, only static libraries supported
    + SGI Altix/ICE
    + various Linux/Intel (x86/x64) clusters
    The provided configure options (see INSTALL) may provide a good
    basis for building and testing the toolset on other systems.

  - The following platforms have not been tested recently:
    + Cray XE6/XK6
    + Sun Solaris/SPARC-based clusters
    However the supplied buildsystem might still work on these
    systems.

  - The following platforms have not been tested:
    + Cray XT3/4, XT5/6
    + NEC SX-9
    + IBM Blue Gene/L
    + SiCortex systems
    + other NEC SX systems

  - Each toolset installation can only support one MPI implementation
    (because MPI is only source-code but not binary compatible). If
    your systems support more than one MPI implementation (e.g. Linux
    clusters often do), separate builds for each MPI implementation
    have to be installed.

  - The same is true if your system features more than one compiler
    supporting automatic function instrumentation.

  - To build Score-P it is required to have MPI and Fortran compilers.

  - To use PAPI in a shared library build of Score-P, libpapi.so needs
    to be in the linker's search path, e.g., in LD_LIBRARY_PATH.

--------------------------------------------------------------------------------

* Automatic instrumentation via "scorep" based on (often undocumented)
  compiler switches

  - GNU    : tested with GCC 4 and higher
  - PGI    : tested with version 10.1
  - Oracle : only works for Fortran (not C/C++), tested with version 12.2
  - IBM    : only works for xlc/xlC version 7.0 and xlf version 9.1 and 
             higher and corresponding bgxl compilers on BlueGene systems
  - Intel  : only works with Intel icc/ifort version 10 and higher compilers

  Measurement filtering can only be applied to functions instrumented
  by the IBM, GNU, Intel, PGI, or Oracle compilers as well as
  functions instrumented by PDT and user functions. (Filtering of MPI
  functions, OpenMP is always ineffective.)

  Function instrumentation based on using the GNU and Intel interface
  has the limitation that instrumented functions in dynamically loaded
  (shared) libraries are not measured (i.e., implicitly filtered).

  The GNU Fortran compiler versions 4.6.0 and 4.6.1 have a bug which
  leads to an internal compiler error when using automatic function
  instrumentation.  It is therefore recommended to either use an
  older/newer version of the compiler or to work around this issue by
  using manual instrumentation or automatic source-code
  instrumentation based on PDToolkit.

  Function instrumentation using the Intel compiler version 11.1 for
  codes using OpenMP tasking is erroneous. You might try PDT
  instrumentation instead.

--------------------------------------------------------------------------------

* Score-P misc.

  - Applications using an autotools-based buildsystem should add the
    option "--disable-option-checking" to the usual configure
    call. Score-P is added only at make time like "make CC="scorep
    <your-CC>" (same for CXX, F77, and FC)

  - Measurements of applications using OpenMP tasking is at the moment
    only supported in tracing mode.

  - Literal file-filter rules like "INCLUDE bt.f" for Fortran files that 
    will be processed by OPARI2 (i.e., files containing OpenMP or POMP 
    user pragmas) do not work as expected as OPARI2 changes the file 
    name (here to bt.opari.f)

  - Some combinations of instrumenter options are known to produce
    errors. These will be fixed in v1.1.

--------------------------------------------------------------------------------

* OTF2/OPARI2/CUBE4

  - Please see the OPEN_ISSUES documents in the corresponding
    packages.

--------------------------------------------------------------------------------

Please report bugs, wishes, and suggestions to
<scorep-bugs@groups.tu-dresden.de>.
