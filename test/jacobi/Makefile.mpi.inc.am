## -*- mode: makefile -*-

## 
## This file is part of the Score-P software (http://www.score-p.org)
##
## Copyright (c) 2009-2011, 
##    RWTH Aachen University, Germany
##    Gesellschaft fuer numerische Simulation mbH Braunschweig, Germany
##    Technische Universitaet Dresden, Germany
##    University of Oregon, Eugene, USA
##    Forschungszentrum Juelich GmbH, Germany
##    German Research School for Simulation Sciences GmbH, Juelich/Aachen, Germany
##    Technische Universitaet Muenchen, Germany
##
## See the COPYING file in the package base directory for details.
##

## file       Makefile.mpi.inc.am
## author     Christian Roessel <c.roessel@fz-juelich.de>
## maintainer Christian Roessel <c.roessel@fz-juelich.de>


if HAVE_MPI_SUPPORT

## MPI C

check_PROGRAMS       += jacobi_mpi_c
jacobi_mpi_c_sources  = $(SRC_ROOT)test/jacobi/MPI/C/jacobi.c  \
                        $(SRC_ROOT)test/jacobi/MPI/C/jacobi.h  \
                        $(SRC_ROOT)test/jacobi/MPI/C/main.c
jacobi_mpi_c_SOURCES  = $(jacobi_mpi_c_sources)
jacobi_mpi_c_CPPFLAGS = $(AM_CPPFLAGS) @COMPILER_INSTRUMENTATION_CPPFLAGS@
jacobi_mpi_c_LDADD    = $(LIB_DIR_SCOREP)libscorep_mpi.la
if HAVE_PAPI
jacobi_mpi_c_LDFLAGS  = @SCOREP_PAPI_LDFLAGS@
endif

check_PROGRAMS                      += jacobi_mpi_c_uninstrumented
jacobi_mpi_c_uninstrumented_SOURCES  = $(jacobi_mpi_c_sources)
jacobi_mpi_c_uninstrumented_CPPFLAGS = $(AM_CPPFLAGS)
jacobi_mpi_c_uninstrumented_LDADD    = -lm

TESTS_MPI += jacobi_mpi_c

## MPI + OpenMP C

if HAVE_OPENMP_SUPPORT
noinst_LTLIBRARIES             += libjacobi_mpi_pomp_c.la
libjacobi_mpi_pomp_c_la_SOURCES  = $(SRC_ROOT)test/jacobi/hybrid/C/pomp.c
libjacobi_mpi_pomp_c_la_CPPFLAGS = $(AM_CPPFLAGS)

check_PROGRAMS           += jacobi_mpi_omp_c
jacobi_mpi_omp_c_SOURCES  = $(SRC_ROOT)test/jacobi/hybrid/C/jacobi.mod.c       \
                            $(SRC_ROOT)test/jacobi/hybrid/C/jacobi.c.opari.inc \
                            $(SRC_ROOT)test/jacobi/hybrid/C/jacobi.h           \
                            $(SRC_ROOT)test/jacobi/hybrid/C/main.mod.c         \
                            $(SRC_ROOT)test/jacobi/hybrid/C/main.c.opari.inc
jacobi_mpi_omp_c_CFLAGS   = $(AM_CFLAGS) $(OPENMP_CFLAGS)
jacobi_mpi_omp_c_CPPFLAGS = $(AM_CPPFLAGS) @OPARI2_CPPFLAGS@ @COMPILER_INSTRUMENTATION_CPPFLAGS@
jacobi_mpi_omp_c_LDADD    = $(LIB_DIR_SCOREP)libscorep_mpi_omp.la libjacobi_mpi_pomp_c.la
if HAVE_PAPI
jacobi_mpi_omp_c_LDFLAGS  = @SCOREP_PAPI_LDFLAGS@
endif

# for some unknown reason we need an extra -I for the SUN compiler in
# OpenMP and hybrid mode.
if SCOREP_COMPILER_SUN
jacobi_mpi_omp_c_CPPFLAGS += -I$(INC_ROOT)test/jacobi/hybrid/C
endif

check_PROGRAMS                        += jacobi_mpi_omp_c_unistrumented
jacobi_mpi_omp_c_unistrumented_SOURCES = $(SRC_ROOT)test/jacobi/hybrid/C/jacobi.c \
                                         $(SRC_ROOT)test/jacobi/hybrid/C/jacobi.h \
                                         $(SRC_ROOT)test/jacobi/hybrid/C/main.c
jacobi_mpi_omp_c_unistrumented_CFLAGS  = $(AM_CFLAGS) $(OPENMP_CFLAGS)
jacobi_mpi_omp_c_unistrumented_LDADD   = -lm

TESTS_MPI_OMP += jacobi_mpi_omp_c

endif

## MPI C++

check_PROGRAMS         += jacobi_mpi_cxx
jacobi_mpi_cxx_sources  = $(SRC_ROOT)test/jacobi/MPI/C++/jacobi.cpp  \
                          $(SRC_ROOT)test/jacobi/MPI/C++/jacobi.h    \
                          $(SRC_ROOT)test/jacobi/MPI/C++/main.cpp
jacobi_mpi_cxx_SOURCES  = $(jacobi_mpi_cxx_sources)
jacobi_mpi_cxx_CPPFLAGS = $(AM_CPPFLAGS) @COMPILER_INSTRUMENTATION_CPPFLAGS@
jacobi_mpi_cxx_LDADD    = $(LIB_DIR_SCOREP)libscorep_mpi.la
if HAVE_PAPI
jacobi_mpi_cxx_LDFLAGS  = @SCOREP_PAPI_LDFLAGS@
endif

check_PROGRAMS                        += jacobi_mpi_cxx_uninstrumented
jacobi_mpi_cxx_uninstrumented_SOURCES  = $(jacobi_mpi_cxx_sources)
jacobi_mpi_cxx_uninstrumented_CPPFLAGS = $(AM_CPPFLAGS)
jacobi_mpi_cxx_uninstrumented_LDADD    = -lm

TESTS_MPI += jacobi_mpi_cxx

## MPI + OpenMP C++

if HAVE_OPENMP_SUPPORT
noinst_LTLIBRARIES               += libjacobi_mpi_pomp_cxx.la
libjacobi_mpi_pomp_cxx_la_SOURCES  = $(SRC_ROOT)test/jacobi/hybrid/C++/pomp.c
libjacobi_mpi_pomp_cxx_la_CPPFLAGS = $(AM_CPPFLAGS)

check_PROGRAMS             += jacobi_mpi_omp_cxx
jacobi_mpi_omp_cxx_SOURCES  = $(SRC_ROOT)test/jacobi/hybrid/C++/jacobi.mod.cpp       \
                              $(SRC_ROOT)test/jacobi/hybrid/C++/jacobi.cpp.opari.inc \
                              $(SRC_ROOT)test/jacobi/hybrid/C++/jacobi.h             \
                              $(SRC_ROOT)test/jacobi/hybrid/C++/main.mod.cpp         \
                              $(SRC_ROOT)test/jacobi/hybrid/C++/main.cpp.opari.inc
jacobi_mpi_omp_cxx_CXXFLAGS = $(AM_CXXFLAGS) $(OPENMP_CXXFLAGS)
jacobi_mpi_omp_cxx_CFLAGS   = $(AM_CFLAGS)   $(OPENMP_CFLAGS)
jacobi_mpi_omp_cxx_CPPFLAGS = $(AM_CPPFLAGS) @OPARI2_CPPFLAGS@ @COMPILER_INSTRUMENTATION_CPPFLAGS@
jacobi_mpi_omp_cxx_LDADD    = $(LIB_DIR_SCOREP)libscorep_mpi_omp.la libjacobi_mpi_pomp_cxx.la
if HAVE_PAPI
jacobi_mpi_omp_cxx_LDFLAGS  = @SCOREP_PAPI_LDFLAGS@
endif

check_PROGRAMS                            += jacobi_mpi_omp_cxx_unistrumented
jacobi_mpi_omp_cxx_unistrumented_SOURCES   = $(SRC_ROOT)test/jacobi/hybrid/C++/jacobi.cpp \
                                             $(SRC_ROOT)test/jacobi/hybrid/C++/jacobi.h   \
                                             $(SRC_ROOT)test/jacobi/hybrid/C++/main.cpp
jacobi_mpi_omp_cxx_unistrumented_CXXFLAGS  = $(AM_CXXFLAGS) $(OPENMP_CXXFLAGS)
jacobi_mpi_omp_cxx_unistrumented_LDADD     = -lm

TESTS_MPI_OMP += jacobi_mpi_omp_cxx

endif

## MPI Fortran

if HAVE_MPIFC
if FORTRAN_SUPPORT_ALLOCATABLE

# Specify fortran dependencies manually
variabledef.mod: VariableDef.$(OBJEXT)
jacobi_mpi_f90-jacobi.$(OBJEXT): variabledef.mod
jacobi_mpi_f90-main.$(OBJEXT): variabledef.mod

check_PROGRAMS         += jacobi_mpi_f90
jacobi_mpi_f90_sources  = $(SRC_ROOT)test/jacobi/MPI/Fortran/VariableDef.f90 \
                          $(SRC_ROOT)test/jacobi/MPI/Fortran/jacobi.F90      \
                          $(SRC_ROOT)test/jacobi/MPI/Fortran/main.F90
jacobi_mpi_f90_SOURCES  = $(jacobi_mpi_f90_sources)
jacobi_mpi_f90_CPPFLAGS = @COMPILER_INSTRUMENTATION_CPPFLAGS@ 
jacobi_mpi_f90_LDADD    = $(LIB_DIR_SCOREP)libscorep_mpi.la
if HAVE_PAPI
jacobi_mpi_f90_LDFLAGS  = @SCOREP_PAPI_LDFLAGS@
endif

check_PROGRAMS                        += jacobi_mpi_f90_uninstrumented
jacobi_mpi_f90_uninstrumented_SOURCES  = $(jacobi_mpi_f90_sources)
# if the CPP flags are not specified  AM_CPPFLAGS are used by default which
# cause an error on Jump.
jacobi_mpi_f90_uninstrumented_CPPFLAGS = 
jacobi_mpi_f90_uninstrumented_LDADD    = -lm

TESTS_MPI += jacobi_mpi_f90

## MPI + OpenMP Fortran

if HAVE_OPENMP_SUPPORT

if ! SCOREP_COMPILER_CRAY
# The cray fortran compiler bails out on #line directives so we just
# deactivate the tests with opari2-preinstrumented fortran sources.

# Specify fortran dependencies manually
jacobi_mpi_omp_f90-jacobi.$(OBJEXT): variabledef.mod
jacobi_mpi_omp_f90-main.$(OBJEXT): variabledef.mod

noinst_LTLIBRARIES               += libjacobi_mpi_pomp_f90.la
libjacobi_mpi_pomp_f90_la_SOURCES  = $(SRC_ROOT)test/jacobi/hybrid/Fortran/pomp.c
libjacobi_mpi_pomp_f90_la_CPPFLAGS = $(AM_CPPFLAGS)

check_PROGRAMS             += jacobi_mpi_omp_f90
jacobi_mpi_omp_f90_SOURCES  = $(SRC_ROOT)test/jacobi/hybrid/Fortran/VariableDef.f90      \
                              $(SRC_ROOT)test/jacobi/hybrid/Fortran/jacobi.mod.F90       \
                              $(SRC_ROOT)test/jacobi/hybrid/Fortran/jacobi.F90.opari.inc \
                              $(SRC_ROOT)test/jacobi/hybrid/Fortran/main.mod.F90         \
                              $(SRC_ROOT)test/jacobi/hybrid/Fortran/main.F90.opari.inc
jacobi_mpi_omp_f90_FCFLAGS  = $(AM_FCFLAGS) $(OPENMP_FCFLAGS)
jacobi_mpi_omp_f90_CFLAGS   = $(AM_CFLAGS)  $(OPENMP_CFLAGS)
jacobi_mpi_omp_f90_CPPFLAGS = $(OPENMP_CXXFLAGS) @OPARI2_CPPFLAGS@ @COMPILER_INSTRUMENTATION_CPPFLAGS@ -I$(INC_ROOT)test/jacobi/hybrid/Fortran -I$(INC_ROOT)/src -I$(SRC_ROOT)/src
jacobi_mpi_omp_f90_LDADD    = $(LIB_DIR_SCOREP)libscorep_mpi_omp.la libjacobi_mpi_pomp_f90.la
jacobi_mpi_omp_f90_LDFLAGS  = $(OPENMP_CXXFLAGS)
if HAVE_PAPI
jacobi_mpi_omp_f90_LDFLAGS += @SCOREP_PAPI_LDFLAGS@
endif

check_PROGRAMS                            += jacobi_mpi_omp_f90_unistrumented
jacobi_mpi_omp_f90_unistrumented_SOURCES   = $(SRC_ROOT)test/jacobi/hybrid/Fortran/VariableDef.f90 \
                                             $(SRC_ROOT)test/jacobi/hybrid/Fortran/jacobi.F90      \
                                             $(SRC_ROOT)test/jacobi/hybrid/Fortran/main.F90
jacobi_mpi_omp_f90_unistrumented_LDFLAGS   = $(OPENMP_CXXFLAGS)
jacobi_mpi_omp_f90_unistrumented_FCFLAGS   = $(AM_FCFLAGS) $(OPENMP_FCFLAGS)
jacobi_mpi_omp_f90_unistrumented_CPPFLAGS  = $(OPENMP_CXXFLAGS) 
jacobi_mpi_omp_f90_unistrumented_LDADD     = -lm

TESTS_MPI_OMP += jacobi_mpi_omp_f90

endif
# if ! SCOREP_COMPILER_CRAY

endif
# if HAVE_OPENMP_SUPPORT

endif
# if FORTRAN_SUPPORT_ALLOCATABLE

endif
# if HAVE_MPIFC

endif
# if MPI_SUPPOERTED

CLEANFILES += variabledef.mod jacobimod.mod
