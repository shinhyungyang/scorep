Score-P
-------
The Score-P (Scalable Performance Measurement Infrastructure for
Parallel Codes) measurement infrastructure is a highly scalable and
easy-to-use tool suite for profiling, event trace recording, and
online analysis of HPC applications.

To build Score-P you usually just need to do 

  ./configure
  make
  make install

Please have a look at INSTALL for further configure and build options.

After make install you will find html and pdf documentation as well as
usage examples under $(prefix)/share/scorep/doc.

The following influential environment variables haven't made it into
the documentation yet:


SCOREP_ENABLE_PROFILING - Enable profiling
    Type:    Boolean
    Default: True

SCOREP_ENABLE_TRACING - Enable tracing
    Type:    Boolean
    Default: True

SCOREP_VERBOSE - Be verbose
    Type:    Boolean
    Default: False

SCOREP_TOTAL_MEMORY - Total memory in bytes for the measurement system
                      excluding trace memory
    Type:    Number with size suffixes.
    Default: 1200k

SCOREP_PAGE_SIZE - TOTAL_MEMORY will be split up into pages of size PAGE_SIZE
    Type:    Number with size suffixes.
    Default: 8k

SCOREP_COMPRESS_TRACES - Whether or not to compress traces with libz
    Type:    Boolean
    Default: False

SCOREP_EXPERIMENT_DIRECTORY - Name of the experiment directory
    When no experiment name is given (the default) Score-P names the
    experiment directory `scorep-measurement-tmp' and renames this
    after a successful measurement to a generated name based on the
    current time.
    Type:    String
    Default: ""

SCOREP_OVERWRITE_EXPERIMENT_DIRECTORY - Overwrite an existing experiment 
                                        directory
    If you specified a specific experiment directory name, but this name
    is already given, you can force overwriting it with this flag.
    The previous experiment directory will be renamed.
    Type:    Boolean
    Default: True

SCOREP_EXECUTABLE - Executable of the application
    File name, preferrrably with full path, of the application's executable.
    It is used for evaluating the symbol table of the application, which is
    required by some compiler adapters.
    Type:    String
    Default: ""

SCOREP_MPI_HIERARCHICAL_UNIFY - Use the hierarchical MPI unify algorithm
    Type:    Boolean
    Default: True

SCOREP_MPI_MAX_COMMUNICATORS - Determines the number of concurrently used
                               communicators per process.
    Type:    Number
    Default: 50

SCOREP_MPI_MAX_WINDOWS - Determines the number of concurrently used windows for
                         MPI one-sieded communication per process
    Type:    Number
    Default: 50

SCOREP_MPI_MAX_ACCESS_EPOCHS - Maximum amount of concurrently active access or
                               exposure epochs per process
    Type:    Number
    Default: 50

SCOREP_MPI_MAX_GROUPS - Maximum number of concurrently used MPI groups per
                        process
    Type:    Number
    Default: 50

SCOREP_MPI_ENABLE_GROUPS - The names of the function groups which are measured
    The names of the function groups which are measured.
    Other functions are not measured.
    Possible groups are:
     All:       All MPI functions
     CG:        Communicator and group management
     COLL:      Collective functions
     DEFAULT:   Default configuration
     ENV:       Environmental management
     ERR:       MPI Error handling
     EXT:       External interface functions
     IO:        MPI file I/O
     MISC:      Miscellaneous
     PERF:      PControl
     P2P:       Peer-to-peer communication
     RMA:       One sided communication
     SPAWN:     Process management
     TOPO:      Topology
     TYPE:      MPI datatype functions
     XNONBLOCK: Extended non-blocking events
     XREQTEST:  Test events for uncompleted requests
    Type:    Set
    Default: DEFAULT

SCOREP_MPI_ONLINE_ANALYSIS - Enable online mpi wait states analysis
    Type:    Boolean
    Default: False

SCOREP_SELECTIVE_CONFIG_FILE - A file name which configures selective tracing
    Type:    String
    Default: ""

SCOREP_FILTER_FILE - A file name which contain the filter rules
    Type:    String
    Default: ""

SCOREP_ONLINEACCESS_REG_PORT - Online Access registry service port
    Type:    Number
    Default: 50100

SCOREP_ONLINEACCESS_REG_HOST - Online Access registry service hostname
    Type:    String
    Default: "localhost"

SCOREP_ONLINEACCESS_BASE_PORT - Base port for Online Access server
    Type:    Number
    Default: 50010

SCOREP_ONLINEACCESS_APPL_NAME - Application name to be registered
    Type:    String
    Default: "appl"

SCOREP_PROFILING_MAX_CALLPATH_DEPTH - Maximum depth of the calltree
    Type:    Number
    Default: 30

SCOREP_PROFILING_BASE_NAME - Base for construction of the profile filename
    String which is used as based to create the filenames for the profile
    files.
    Type:    String
    Default: "profile"

SCOREP_PROFILING_FORMAT - Profile output format
    The following formats are supported:
     NONE:         No profile output. This does not disable profile recording.
     TAU_SNAPSHOT: Tau snapshot format.
     CUBE4:        Cube4 format.
     DEFAULT:      Default format. If Cube4 is supported, Cube4 is the default
                   else the Tau snapshot format is default.
    Type:    Set
    Default: DEFAULT

SCOREP_METRIC_PAPI - PAPI metric names
    List of requested metric names that will be collected during program run.
    Type:    String
    Default: ""

SCOREP_METRIC_PAPI_SEP - Separator of PAPI metric names
    Character that separates metric names in PAPI.
    Type:    String
    Default: ","

SCOREP_METRIC_RUSAGE - Resource ussage metric names
    List of requested resource usage metric names that will be collected during
    program run
    Type:    String
    Default: ""

SCOREP_METRIC_RUSAGE_SEP - Separator of resource usage metric names
    Character that separates resource usage metric names in RUSAGE.
    Type:    String
    Default: ","


Have fun!

Please report bugs to <scorep-bugs@groups.tu-dresden.de>.
