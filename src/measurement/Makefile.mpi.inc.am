## -*- mode: makefile -*-

## 
## This file is part of the Score-P software (http://www.score-p.org)
##
## Copyright (c) 2009-2012,
##    RWTH Aachen University, Germany
##    Gesellschaft fuer numerische Simulation mbH Braunschweig, Germany
##    Technische Universitaet Dresden, Germany
##    University of Oregon, Eugene, USA
##    Forschungszentrum Juelich GmbH, Germany
##    German Research School for Simulation Sciences GmbH, Juelich/Aachen, Germany
##    Technische Universitaet Muenchen, Germany
##
## See the COPYING file in the package base directory for details.
##

## file       src/measurement/Makefile.mpi.inc.am
## maintainer Christian Roessel <c.roessel@fz-juelich.de>


include ../src/measurement/Makefile.common.inc.am


## see also Makefile.inc.am in the same directory


## paradigm mpi

if HAVE_MPI_SUPPORT
noinst_LTLIBRARIES += libscorep_paradigm_mpi.la
libscorep_paradigm_mpi_la_SOURCES =                                 \
    $(SRC_ROOT)src/measurement/paradigm/scorep_mpi_enabled.c        \
    $(SRC_ROOT)src/measurement/paradigm/scorep_unify_mpi_enabled.c  \
    $(SRC_ROOT)src/measurement/paradigm/scorep_clock_synchronization_mpi_enabled.c
libscorep_paradigm_mpi_la_CPPFLAGS = \
    $(common_libscorep_cppflags)


## sion-mpi

noinst_LTLIBRARIES += libscorep_sion_mpi.la
if HAVE_SION_MPI
libscorep_sion_mpi_la_SOURCES  = \
    $(SRC_ROOT)src/measurement/paradigm/scorep_sion_mpi.c
libscorep_sion_mpi_la_CPPFLAGS = \
    $(AM_CPPFLAGS) \
    $(SCOREP_SION_MPI_CPPFLAGS) \
    -I$(INC_ROOT)src/measurement/include \
    -I$(INC_ROOT)src/measurement \
    -I$(PUBLIC_INC_DIR) \
    $(UTILS_CPPFLAGS) \
    @OTF2_CPPFLAGS@
libscorep_sion_mpi_la_LDFLAGS  = \
    $(SCOREP_SION_MPI_LDFLAGS)
libscorep_sion_mpi_la_LIBADD   = \
    $(SCOREP_SION_MPI_LIBS)
else
libscorep_sion_mpi_la_SOURCES  = \
    $(SRC_ROOT)src/measurement/paradigm/scorep_sion_not_supported.c
libscorep_sion_mpi_la_CPPFLAGS = \
    $(AM_CPPFLAGS) \
    -I$(INC_ROOT)src/measurement \
    $(UTILS_CPPFLAGS) \
    @OTF2_CPPFLAGS@
endif


## sion-mpi-omp

noinst_LTLIBRARIES += libscorep_sion_mpi_omp.la
# disabled, as long as we havn't integrated SION hybrid support into Score-P
#if HAVE_SION_MPI_OMP
#libscorep_sion_mpi_omp_la_SOURCES  = \
#    $(SRC_ROOT)src/measurement/paradigm/scorep_sion_mpi_omp.c
#libscorep_sion_mpi_omp_la_CPPFLAGS = \
#    $(AM_CPPFLAGS) \
#    $(SCOREP_SION_MPI_OMP_CPPFLAGS) \
#    -I$(INC_ROOT)src/measurement \
#    $(UTILS_CPPFLAGS) \
#    @OTF2_CPPFLAGS@
#libscorep_sion_mpi_omp_la_LDFLAGS = \
#    $(SCOREP_SION_MPI_OMP_LDFLAGS)
#libscorep_sion_mpi_omp_la_LIBADD = \
#    $(SCOREP_SION_MPI_OMP_LIBS)
#else
libscorep_sion_mpi_omp_la_SOURCES = \
    $(SRC_ROOT)src/measurement/paradigm/scorep_sion_not_supported.c
libscorep_sion_mpi_omp_la_CPPFLAGS = \
    $(AM_CPPFLAGS) \
    -I$(INC_ROOT)src/measurement \
    $(UTILS_CPPFLAGS) \
    @OTF2_CPPFLAGS@
#endif


## build some otf2 code from here as it requires MPI
check_PROGRAMS += otf2_speed_test
otf2_speed_test_SOURCES = \
    $(SRC_ROOT)vendor/otf2/src/tools/otf2_speed_test/otf2_speed_test.c
otf2_speed_test_CPPFLAGS = \
    $(AM_CPPFLAGS) \
    $(UTILS_CPPFLAGS) \
    @OTF2_CPPFLAGS@
otf2_speed_test_LDFLAGS = \
    @OTF2_LDFLAGS@
otf2_speed_test_LDADD = \
    $(MPILIBS) \
    @OTF2_LIBS@

endif
