## -*- mode: makefile -*-

##
## This file is part of the Score-P software (http://www.score-p.org)
##
## Copyright (c) 2009-2013,
## RWTH Aachen University, Germany
##
## Copyright (c) 2009-2013,
## Gesellschaft fuer numerische Simulation mbH Braunschweig, Germany
##
## Copyright (c) 2009-2013,
## Technische Universitaet Dresden, Germany
##
## Copyright (c) 2009-2013,
## University of Oregon, Eugene, USA
##
## Copyright (c) 2009-2014, 2017, 2023-2024,
## Forschungszentrum Juelich GmbH, Germany
##
## Copyright (c) 2009-2013,
## German Research School for Simulation Sciences GmbH, Juelich/Aachen, Germany
##
## Copyright (c) 2009-2013,
## Technische Universitaet Muenchen, Germany
##
## This software may be modified and distributed under the terms of
## a BSD-style license.  See the COPYING file in the package base
## directory for details.
##

## file       src/measurement/Makefile.mpi.inc.am


include ../src/measurement/Makefile.common.inc.am


## see also Makefile.inc.am in the same directory


## paradigm mpi

if HAVE_MPI_SUPPORT

lib_LTLIBRARIES += libscorep_mpp_mpi.la
libscorep_mpp_mpi_la_SOURCES = \
    $(SRC_ROOT)src/measurement/paradigm/mpi/scorep_mpp_mpi.c
libscorep_mpp_mpi_la_CPPFLAGS = \
    $(AM_CPPFLAGS) \
    -I$(INC_ROOT)src/measurement \
    -I$(PUBLIC_INC_DIR)
libscorep_mpp_mpi_la_LIBADD = \
    libscorep_ipc_mpi.la \
    $(LIB_DIR_SCOREP)libscorep_mpp_ipc.la \
    $(LIB_DIR_SCOREP)libutils.la \
    $(libutils_la_needs_LIBS)
libscorep_mpp_mpi_la_LDFLAGS = @MPILIB_LDFLAGS@ \
    $(library_api_version_ldflags)

BACKEND_TARGETS += $(LIB_DIR_SCOREP)libscorep_mpp_ipc.la

noinst_LTLIBRARIES += libscorep_ipc_mpi.la
libscorep_ipc_mpi_la_SOURCES = \
    $(SRC_ROOT)src/measurement/paradigm/mpi/scorep_ipc_mpi.c \
    $(SRC_ROOT)src/measurement/paradigm/mpi/scorep_ipc_mpi_unify_communicators.c
libscorep_ipc_mpi_la_CPPFLAGS = \
    $(AM_CPPFLAGS) \
    -I$(INC_ROOT)src/measurement \
    $(UTILS_CPPFLAGS) \
    -I$(INC_ROOT)src/measurement/include \
    -I$(PUBLIC_INC_DIR) \
    -I$(INC_DIR_COMMON_HASH) \
    -I$(INC_ROOT)src/adapters/mpi \
    -I$(INC_DIR_DEFINITIONS)

## sion-mpi

if !HAVE_SCOREP_EXTERNAL_OTF2
## build some otf2 code from here as it requires MPI

# For internal otf2, otf2-config is not available at first
# invocation of make, but make all, check, install, install-exec,
# dist will build it via BUILT_SOURCES and call make <target>
# again. In this second make call, the variables are set as
# intended. BUILT_SOURCES are also built via
# make build_external_targets.
BUILT_SOURCES += $(BINDIR)/otf2-config
$(BINDIR)/otf2-config:
	@if test -f ../vendor/otf2/Makefile; then $(am__cd) ../vendor/otf2 && $(MAKE) $(AM_MAKEFLAGS) install; else exit 1;fi
otf2-clean:
	@if test -f ../vendor/otf2/Makefile; then $(am__cd) ../vendor/otf2 && $(MAKE) $(AM_MAKEFLAGS) clean uninstall; fi
CLEAN_LOCAL += otf2-clean

check_PROGRAMS += otf2_speed_test
otf2_speed_test_SOURCES = \
    $(SRC_ROOT)vendor/otf2/src/tools/otf2_speed_test/otf2_speed_test.c
otf2_speed_test_CPPFLAGS = \
    $(AM_CPPFLAGS) \
    $(UTILS_CPPFLAGS) \
    $(OTF2_CPPFLAGS)
otf2_speed_test_LDFLAGS = \
    $(OTF2_LDFLAGS)
otf2_speed_test_LDADD = \
    $(MPILIBS) \
    $(OTF2_LIBS)
endif !HAVE_SCOREP_EXTERNAL_OTF2

endif HAVE_MPI_SUPPORT
