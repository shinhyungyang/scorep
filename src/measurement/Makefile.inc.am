## -*- mode: makefile -*-

# This file is part of the Score-P software (http://www.score-p.org)
#
# Copyright (c) 2009-2012,
#    RWTH Aachen University, Germany
#    Gesellschaft fuer numerische Simulation mbH Braunschweig, Germany
#    Technische Universitaet Dresden, Germany
#    University of Oregon, Eugene, USA
#    Forschungszentrum Juelich GmbH, Germany
#    German Research School for Simulation Sciences GmbH, Juelich/Aachen, Germany
#    Technische Universitaet Muenchen, Germany
#
# See the COPYING file in the package base directory for details.

## file       src/measurement/Makefile.inc.am
## maintainer Christian Roessel <c.roessel@fz-juelich.de>


include ../src/measurement/Makefile.common.inc.am

noinst_LTLIBRARIES += libscorep_measurement.la
libscorep_measurement_la_SOURCES =                                \
    $(SRC_ROOT)src/measurement/SCOREP_RuntimeManagement.c         \
    $(SRC_ROOT)src/measurement/SCOREP_Events.c                    \
    $(SRC_ROOT)src/measurement/SCOREP_Config.c                    \
    $(SRC_ROOT)src/measurement/SCOREP_Definitions.c               \
    $(SRC_ROOT)src/measurement/SCOREP_Memory.c                    \
    $(SRC_ROOT)src/measurement/include/SCOREP_Subsystem.h         \
    $(SRC_ROOT)src/measurement/include/SCOREP_Config.h            \
    $(SRC_ROOT)src/measurement/include/SCOREP_Definitions.h       \
    $(SRC_ROOT)src/measurement/include/SCOREP_Events.h            \
    $(SRC_ROOT)src/measurement/include/SCOREP_Memory.h            \
    $(SRC_ROOT)src/measurement/include/SCOREP_RuntimeManagement.h \
    $(SRC_ROOT)src/measurement/include/SCOREP_Location.h          \
    $(SRC_ROOT)src/measurement/include/SCOREP_Types.h             \
    $(SRC_ROOT)src/measurement/include/SCOREP_DefinitionHandles.h \
    $(SRC_ROOT)src/measurement/include/SCOREP_Mutex.h             \
    $(SRC_ROOT)src/measurement/include/SCOREP_Filter_Init.h       \
    $(SRC_ROOT)src/measurement/include/SCOREP_Properties.h        \
    $(SRC_ROOT)src/measurement/filtering/SCOREP_Filter_Init.c     \
    $(SRC_ROOT)src/measurement/scorep_runtime_management.c        \
    $(SRC_ROOT)src/measurement/scorep_subsystem.c                 \
    $(SRC_ROOT)src/measurement/scorep_subsystem.h                 \
    $(SRC_ROOT)src/measurement/scorep_types.c                     \
    $(SRC_ROOT)src/measurement/scorep_types.h                     \
    $(SRC_ROOT)src/measurement/scorep_handles.c                   \
    $(SRC_ROOT)src/measurement/scorep_handles.h                   \
    $(SRC_ROOT)src/measurement/scorep_thread.h                    \
    $(SRC_ROOT)src/measurement/scorep_runtime_management.h        \
    $(SRC_ROOT)src/measurement/scorep_definition_management.c     \
    $(SRC_ROOT)src/measurement/scorep_definitions.h               \
    $(SRC_ROOT)src/measurement/scorep_definition_structs.h        \
    $(SRC_ROOT)src/measurement/scorep_definition_macros.h         \
    $(SRC_ROOT)src/measurement/scorep_status.c                    \
    $(SRC_ROOT)src/measurement/scorep_status.h                    \
    $(SRC_ROOT)src/measurement/scorep_properties.c                \
    $(SRC_ROOT)src/measurement/scorep_properties.h                \
    $(SRC_ROOT)src/measurement/scorep_mpi.h                       \
    $(SRC_ROOT)src/measurement/scorep_environment.c               \
    $(SRC_ROOT)src/measurement/scorep_environment.h               \
    $(SRC_ROOT)src/measurement/scorep_unify.c                     \
    $(SRC_ROOT)src/measurement/scorep_unify.h                     \
    $(SRC_ROOT)src/measurement/scorep_definition_cube4.h          \
    $(SRC_ROOT)src/measurement/scorep_definition_cube4.c          \
    $(SRC_ROOT)src/measurement/scorep_system_tree.h               \
    $(SRC_ROOT)src/measurement/scorep_system_tree.c               \
    $(SRC_ROOT)src/measurement/scorep_clock_synchronization.h     \
    $(SRC_ROOT)src/measurement/scorep_clock_synchronization.c     \
    $(SRC_ROOT)src/measurement/scorep_runtime_management_timings.h \
    $(SRC_ROOT)src/measurement/scorep_runtime_management_timings.c \
    $(SRC_ROOT)src/measurement/scorep_error_callback.h \
    $(SRC_ROOT)src/measurement/scorep_error_callback.c

libscorep_measurement_la_CPPFLAGS = \
    $(common_libscorep_cppflags) \
    -I$(INC_ROOT)src/services/include \
    @CUBE_WRITER_CPPFLAGS@

## paradigm omp

if HAVE_OPENMP_SUPPORT
noinst_LTLIBRARIES              += libscorep_paradigm_omp.la
libscorep_paradigm_omp_la_CFLAGS   = $(AM_CFLAGS) $(OPENMP_CFLAGS)
# Sources include SCOREP_Omp.h that conditionally compiles on _OPENMP
libscorep_paradigm_omp_la_SOURCES  =                       \
    $(SRC_ROOT)src/measurement/scorep_thread.c             \
    $(SRC_ROOT)src/measurement/paradigm/scorep_openmp.c    \
    $(SRC_ROOT)src/measurement/paradigm/scorep_openmp.h    \
    $(SRC_ROOT)src/measurement/paradigm/scorep_mutex_omp.c 
libscorep_paradigm_omp_la_CPPFLAGS = \
    $(common_libscorep_cppflags)     \
    -I$(INC_ROOT)src/services/metric
endif

##paradigm non omp

noinst_LTLIBRARIES                  += libscorep_paradigm_non_omp.la
libscorep_paradigm_non_omp_la_SOURCES  =                   \
    $(SRC_ROOT)src/measurement/scorep_thread.c             \
    $(SRC_ROOT)src/measurement/paradigm/scorep_openmp.c    \
    $(SRC_ROOT)src/measurement/paradigm/scorep_openmp.h    \
    $(SRC_ROOT)src/measurement/paradigm/scorep_mutex_non_omp.c 
libscorep_paradigm_non_omp_la_CPPFLAGS = \
    $(common_libscorep_cppflags)         \
    -I$(INC_ROOT)src/services/metric
## paradigm non mpi

noinst_LTLIBRARIES                  += libscorep_paradigm_non_mpi.la
libscorep_paradigm_non_mpi_la_SOURCES  =                            \
    $(SRC_ROOT)src/measurement/paradigm/scorep_mpi_disabled.c       \
    $(SRC_ROOT)src/measurement/paradigm/scorep_unify_mpi_disabled.c \
    $(SRC_ROOT)src/measurement/paradigm/scorep_clock_synchronization_mpi_disabled.c     
libscorep_paradigm_non_mpi_la_CPPFLAGS = \
    $(common_libscorep_cppflags)

## sion-serial

noinst_LTLIBRARIES += libscorep_sion_serial.la
#if HAVE_SION_SERIAL
#libscorep_sion_serial_la_SOURCES  = \
#    $(SRC_ROOT)src/measurement/paradigm/scorep_sion_serial.c
#libscorep_sion_serial_la_CPPFLAGS = \
#    $(AM_CPPFLAGS) \
#    -I$(INC_ROOT)src/measurement \
#    $(UTILS_CPPFLAGS) \
#    @OTF2_CPPFLAGS@
#else
libscorep_sion_serial_la_SOURCES  = \
    $(SRC_ROOT)src/measurement/paradigm/scorep_sion_not_supported.c
libscorep_sion_serial_la_CPPFLAGS = \
    $(AM_CPPFLAGS) \
    -I$(INC_ROOT)src/measurement \
    $(UTILS_CPPFLAGS) \
    @OTF2_CPPFLAGS@
#endif


## sion-omp

noinst_LTLIBRARIES += libscorep_sion_omp.la
#if HAVE_SION_OMP
#libscorep_sion_omp_la_SOURCES = \
#    $(SRC_ROOT)src/measurement/paradigm/scorep_sion_omp.c
#libscorep_sion_omp_la_CPPFLAGS = \
#    $(AM_CPPFLAGS) \
#    $(SCOREP_SION_OMP_CPPFLAGS) \
#    -I$(INC_ROOT)src/measurement \
#    $(UTILS_CPPFLAGS) \
#    @OTF2_CPPFLAGS@
#libscorep_sion_omp_la_LDFLAGS  = \
#    $(SCOREP_SION_OMP_LDFLAGS)
#libscorep_sion_omp_la_LIBADD = \
#    $(SCOREP_SION_OMP_LIBS)
#else
libscorep_sion_omp_la_SOURCES  = \
    $(SRC_ROOT)src/measurement/paradigm/scorep_sion_not_supported.c
libscorep_sion_omp_la_CPPFLAGS = \
    $(AM_CPPFLAGS) \
    -I$(INC_ROOT)src/measurement \
    $(UTILS_CPPFLAGS) \
    @OTF2_CPPFLAGS@
#endif
