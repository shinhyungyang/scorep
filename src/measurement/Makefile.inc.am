## -*- mode: makefile -*-

## 
## This file is part of the Score-P software (http://www.score-p.org)
##
## Copyright (c) 2009-2013,
## RWTH Aachen University, Germany
##
## Copyright (c) 2009-2013,
## Gesellschaft fuer numerische Simulation mbH Braunschweig, Germany
##
## Copyright (c) 2009-2013,
## Technische Universitaet Dresden, Germany
##
## Copyright (c) 2009-2013,
## University of Oregon, Eugene, USA
##
## Copyright (c) 2009-2013,
## Forschungszentrum Juelich GmbH, Germany
##
## Copyright (c) 2009-2013,
## German Research School for Simulation Sciences GmbH, Juelich/Aachen, Germany
##
## Copyright (c) 2009-2013,
## Technische Universitaet Muenchen, Germany
##
## This software may be modified and distributed under the terms of
## a BSD-style license.  See the COPYING file in the package base
## directory for details.
##

## file       src/measurement/Makefile.inc.am


include ../src/measurement/Makefile.common.inc.am

noinst_LTLIBRARIES += libscorep_measurement_core.la
libscorep_measurement_core_la_SOURCES =                           \
    $(SRC_ROOT)src/measurement/SCOREP_RuntimeManagement.c         \
    $(SRC_ROOT)src/measurement/SCOREP_Events.c                    \
    $(SRC_ROOT)src/measurement/scorep_events_common.h             \
    $(SRC_ROOT)src/measurement/SCOREP_Config.c                    \
    $(SRC_ROOT)src/measurement/SCOREP_Memory.c                    \
    $(SRC_ROOT)src/measurement/include/SCOREP_Subsystem.h         \
    $(SRC_ROOT)src/measurement/include/SCOREP_Config.h            \
    $(SRC_ROOT)src/measurement/include/SCOREP_Definitions.h       \
    $(SRC_ROOT)src/measurement/include/SCOREP_Events.h            \
    $(SRC_ROOT)src/measurement/include/SCOREP_Memory.h            \
    $(SRC_ROOT)src/measurement/include/SCOREP_RuntimeManagement.h \
    $(SRC_ROOT)src/measurement/include/SCOREP_Location.h          \
    $(SRC_ROOT)src/measurement/include/SCOREP_Types.h             \
    $(SRC_ROOT)src/measurement/include/SCOREP_DefinitionHandles.h \
    $(SRC_ROOT)src/measurement/include/SCOREP_Mutex.h             \
    $(SRC_ROOT)src/measurement/include/SCOREP_Filter_Init.h       \
    $(SRC_ROOT)src/measurement/include/SCOREP_Properties.h        \
    $(SRC_ROOT)src/measurement/include/SCOREP_OA_Functions.h      \
    $(SRC_ROOT)src/measurement/filtering/SCOREP_Filter_Init.c     \
    $(SRC_ROOT)src/measurement/paradigm/scorep_all_subsystems.c   \
    $(SRC_ROOT)src/measurement/scorep_runtime_management.c        \
    $(SRC_ROOT)src/measurement/scorep_subsystem.c                 \
    $(SRC_ROOT)src/measurement/scorep_subsystem.h                 \
    $(SRC_ROOT)src/measurement/scorep_types.c                     \
    $(SRC_ROOT)src/measurement/scorep_types.h                     \
    $(SRC_ROOT)src/measurement/scorep_thread.h                    \
    $(SRC_ROOT)src/measurement/scorep_location.h                  \
    $(SRC_ROOT)src/measurement/scorep_location.c                  \
    $(SRC_ROOT)src/measurement/scorep_runtime_management.h        \
    $(SRC_ROOT)src/measurement/scorep_status.c                    \
    $(SRC_ROOT)src/measurement/scorep_status.h                    \
    $(SRC_ROOT)src/measurement/scorep_properties.c                \
    $(SRC_ROOT)src/measurement/scorep_properties.h                \
    $(SRC_ROOT)src/measurement/scorep_ipc.h                       \
    $(SRC_ROOT)src/measurement/scorep_environment.c               \
    $(SRC_ROOT)src/measurement/scorep_environment.h               \
    $(SRC_ROOT)src/measurement/scorep_unify.c                     \
    $(SRC_ROOT)src/measurement/scorep_unify.h                     \
    $(SRC_ROOT)src/measurement/scorep_unify_helpers.c             \
    $(SRC_ROOT)src/measurement/scorep_unify_helpers.h             \
    $(SRC_ROOT)src/measurement/scorep_definition_cube4.h          \
    $(SRC_ROOT)src/measurement/scorep_definition_cube4.c          \
    $(SRC_ROOT)src/measurement/scorep_system_tree.h               \
    $(SRC_ROOT)src/measurement/scorep_system_tree.c               \
    $(SRC_ROOT)src/measurement/scorep_runtime_management_timings.h \
    $(SRC_ROOT)src/measurement/scorep_runtime_management_timings.c \
    $(SRC_ROOT)src/measurement/scorep_error_callback.h \
    $(SRC_ROOT)src/measurement/scorep_error_callback.c

libscorep_measurement_core_la_CPPFLAGS = \
    $(common_libscorep_cppflags) \
    -I$(INC_ROOT)src/services/include \
    @CUBE_WRITER_CPPFLAGS@

## paradigm thread

if HAVE_OPENMP_SUPPORT

lib_LTLIBRARIES += libscorep_mutex_omp.la
libscorep_mutex_omp_la_SOURCES = \
    $(SRC_ROOT)src/measurement/paradigm/scorep_mutex_omp.c
libscorep_mutex_omp_la_CFLAGS = $(AM_CFLAGS) $(OPENMP_CFLAGS)
libscorep_mutex_omp_la_CPPFLAGS = \
    $(AM_CPPFLAGS) \
    -I$(INC_ROOT)src/measurement/include \
    $(UTILS_CPPFLAGS)
libscorep_mutex_omp_la_LDFLAGS = \
    $(library_api_version_ldflags)

lib_LTLIBRARIES += libscorep_thread_omp_tpd.la
libscorep_thread_omp_tpd_la_CFLAGS   = $(AM_CFLAGS) $(OPENMP_CFLAGS)
libscorep_thread_omp_tpd_la_SOURCES  =                       \
    $(SRC_ROOT)src/measurement/scorep_thread_omp_tpd.c \
    $(SRC_ROOT)src/measurement/paradigm/omp/scorep_omp_thread_teams.c \
    $(SRC_ROOT)src/measurement/paradigm/omp/scorep_omp_thread_teams.h \
    $(SRC_ROOT)src/measurement/paradigm/omp/scorep_omp_unify.c
libscorep_thread_omp_tpd_la_CPPFLAGS = \
    $(AM_CPPFLAGS) \
    -I$(INC_ROOT)src/measurement/include \
    -I$(PUBLIC_INC_DIR) \
    $(UTILS_CPPFLAGS) \
    -I$(INC_DIR_COMMON_HASH) \
    -I$(INC_ROOT)src/services/include \
    -I$(INC_ROOT)src/measurement/profiling \
    -I$(INC_ROOT)src/measurement \
    -I$(INC_DIR_COMMON_HASH)
libscorep_thread_omp_tpd_la_LIBADD = \
    libscorep_thread_generic.la
libscorep_thread_omp_tpd_la_LDFLAGS = \
    $(library_api_version_ldflags)

endif

##paradigm non thread

noinst_LTLIBRARIES += libscorep_thread_generic.la
libscorep_thread_generic_la_SOURCES = \
    $(SRC_ROOT)src/measurement/scorep_thread_generic.c \
    $(SRC_ROOT)src/measurement/scorep_thread_generic_fork_join.c
libscorep_thread_generic_la_CPPFLAGS = \
    $(AM_CPPFLAGS) \
    -I$(INC_ROOT)src/measurement/include \
    -I$(PUBLIC_INC_DIR) \
    $(UTILS_CPPFLAGS) \
    -I$(INC_ROOT)src/measurement/profiling \
    -I$(INC_ROOT)src/measurement \
    -I$(INC_ROOT)src/services/include


lib_LTLIBRARIES += libscorep_mutex_mockup.la
libscorep_mutex_mockup_la_SOURCES = \
    $(SRC_ROOT)src/measurement/paradigm/scorep_mutex_mockup.c 
libscorep_mutex_mockup_la_CFLAGS = $(AM_CFLAGS) $(OPENMP_CFLAGS)
libscorep_mutex_mockup_la_CPPFLAGS = \
    $(AM_CPPFLAGS) \
    -I$(INC_ROOT)src/measurement/include \
    $(UTILS_CPPFLAGS)
libscorep_mutex_mockup_la_LDFLAGS = \
    $(library_api_version_ldflags)

lib_LTLIBRARIES += libscorep_thread_mockup.la
libscorep_thread_mockup_la_SOURCES  =                   \
    $(SRC_ROOT)src/measurement/scorep_thread_mockup.c
libscorep_thread_mockup_la_CPPFLAGS = \
    $(AM_CPPFLAGS) \
    -I$(INC_ROOT)src/measurement/include \
    -I$(PUBLIC_INC_DIR) \
    $(UTILS_CPPFLAGS) \
    -I$(INC_ROOT)src/measurement/profiling \
    -I$(INC_ROOT)src/measurement
libscorep_thread_mockup_la_LDFLAGS = \
    $(library_api_version_ldflags)

## paradigm non mpp

lib_LTLIBRARIES += libscorep_mpp_mockup.la
libscorep_mpp_mockup_la_SOURCES = \
    $(SRC_ROOT)src/measurement/paradigm/scorep_mpp_mockup.c \
    $(SRC_ROOT)src/measurement/paradigm/scorep_ipc_mockup.c \
    $(SRC_ROOT)src/measurement/paradigm/scorep_unify_mpp_mockup.c \
    $(SRC_ROOT)src/measurement/scorep_clock_synchronization.h     \
    $(SRC_ROOT)src/measurement/scorep_clock_synchronization.c     \
    $(SRC_ROOT)src/measurement/paradigm/scorep_clock_synchronization_mpp_mockup.c
libscorep_mpp_mockup_la_CPPFLAGS = \
    $(AM_CPPFLAGS) \
    $(UTILS_CPPFLAGS) \
    -I$(INC_ROOT)src/measurement \
    -I$(INC_ROOT)src/measurement/include \
    -I$(PUBLIC_INC_DIR) \
    -I$(INC_DIR_COMMON_HASH) \
    -I$(INC_ROOT)src/services/include
libscorep_mpp_mockup_la_LDFLAGS = \
    $(library_api_version_ldflags)

## paradigm mpp

noinst_LTLIBRARIES += libscorep_mpp_ipc.la
# libscorep_mpp_ipc.la needs a real ipc implementation. Currently we
# provide just an MPI implementation, see libscorep_ipc_mpi.la.
libscorep_mpp_ipc_la_SOURCES = \
    $(SRC_ROOT)src/measurement/paradigm/scorep_mpp_ipc.c \
    $(SRC_ROOT)src/measurement/paradigm/scorep_unify_mpp_ipc.c \
    $(SRC_ROOT)src/measurement/scorep_clock_synchronization.h  \
    $(SRC_ROOT)src/measurement/scorep_clock_synchronization.c  \
    $(SRC_ROOT)src/measurement/paradigm/scorep_clock_synchronization_mpp_ipc.c
libscorep_mpp_ipc_la_CPPFLAGS = \
    $(AM_CPPFLAGS) \
    -I$(INC_ROOT)src/measurement \
    $(UTILS_CPPFLAGS) \
    -I$(INC_ROOT)src/measurement/include \
    -I$(PUBLIC_INC_DIR) \
    -I$(INC_DIR_COMMON_HASH) \
    -I$(INC_ROOT)src/services/include

## sion-serial

lib_LTLIBRARIES += libscorep_sion_mockup.la
libscorep_sion_mockup_la_SOURCES  = \
    $(SRC_ROOT)src/measurement/paradigm/scorep_sion_not_supported.c
libscorep_sion_mockup_la_CPPFLAGS = \
    $(AM_CPPFLAGS) \
    -I$(INC_ROOT)src/measurement \
    $(UTILS_CPPFLAGS) \
    @OTF2_CPPFLAGS@
libscorep_sion_mockup_la_LDFLAGS = \
    $(library_api_version_ldflags)

