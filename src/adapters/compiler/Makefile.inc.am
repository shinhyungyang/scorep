## -*- mode: makefile -*-

##
## This file is part of the Score-P software (http://www.score-p.org)
##
## Copyright (c) 2009-2012,
## RWTH Aachen University, Germany
##
## Copyright (c) 2009-2012,
## Gesellschaft fuer numerische Simulation mbH Braunschweig, Germany
##
## Copyright (c) 2009-2012, 2014-2015, 2019, 2021,
## Technische Universitaet Dresden, Germany
##
## Copyright (c) 2009-2012,
## University of Oregon, Eugene, USA
##
## Copyright (c) 2009-2015, 2018-2019, 2021,
## Forschungszentrum Juelich GmbH, Germany
##
## Copyright (c) 2009-2012,
## German Research School for Simulation Sciences GmbH, Juelich/Aachen, Germany
##
## Copyright (c) 2009-2012,
## Technische Universitaet Muenchen, Germany
##
## This software may be modified and distributed under the terms of
## a BSD-style license.  See the COPYING file in the package base
## directory for details.
##

## file src/adapters/compiler/Makefile.inc.am

# --------------------------------------------------------------------
# runtime management library for the compiler adapter

if HAVE_COMPILER_INSTRUMENTATION

lib_LTLIBRARIES += libscorep_adapter_compiler_mgmt.la

libscorep_adapter_compiler_mgmt_la_SOURCES =                \
    $(SRC_ROOT)src/adapters/compiler/SCOREP_Compiler_Init.c \
    $(SRC_ROOT)src/adapters/compiler/SCOREP_Compiler_Init.h

libscorep_adapter_compiler_mgmt_la_CPPFLAGS = \
    $(AM_CPPFLAGS)                            \
    -I$(INC_ROOT)src/measurement/include      \
    -I$(PUBLIC_INC_DIR)                       \
    $(UTILS_CPPFLAGS)                         \
    -I$(INC_DIR_DEFINITIONS)

libscorep_adapter_compiler_mgmt_la_LIBADD = \
    libutils.la

libscorep_adapter_compiler_mgmt_la_LDFLAGS = \
    $(library_api_version_ldflags)


if HAVE_SCOREP_COMPILER_INSTRUMENTATION_NEEDS_ADDR2LINE
libscorep_adapter_compiler_mgmt_la_CPPFLAGS += \
    -I$(INC_DIR_SERVICES)

libscorep_adapter_compiler_mgmt_la_LIBADD += \
    libscorep_addr2line.la
endif HAVE_SCOREP_COMPILER_INSTRUMENTATION_NEEDS_ADDR2LINE


#--- Cray specific settings
if SCOREP_COMPILER_CRAY
libscorep_adapter_compiler_mgmt_la_SOURCES +=                       \
    $(SRC_ROOT)src/adapters/compiler/scorep_compiler_gnu_init.c
endif SCOREP_COMPILER_CRAY


#--- GNU specific settings
if SCOREP_COMPILER_GNU

if !HAVE_GCC_PLUGIN_SUPPORT

libscorep_adapter_compiler_mgmt_la_SOURCES +=                       \
    $(SRC_ROOT)src/adapters/compiler/scorep_compiler_gnu_init.c

#--- GCC-Plugin specific settings
else HAVE_GCC_PLUGIN_SUPPORT

libscorep_adapter_compiler_mgmt_la_SOURCES += \
    $(SRC_ROOT)src/adapters/compiler/scorep_compiler_instrumentation_plugin.h \
    $(SRC_ROOT)src/adapters/compiler/scorep_compiler_gcc_plugin_init.c \
    $(SRC_ROOT)src/adapters/compiler/scorep_compiler_gcc_plugin_weak.c

object_DATA += \
    scorep_compiler_gcc_plugin_begin.$(OBJEXT) \
    scorep_compiler_gcc_plugin_end.$(OBJEXT)

gccplugin_objects_cppflags = \
    -I$(PUBLIC_INC_DIR) \
    -I$(INC_ROOT)src/adapters/compiler \
    -I$(INC_ROOT)src/measurement/include

scorep_compiler_gcc_plugin_begin.$(OBJEXT): $(SRC_ROOT)src/adapters/compiler/scorep_compiler_gcc_plugin_begin.c \
                                            $(SRC_ROOT)src/adapters/compiler/scorep_compiler_instrumentation_plugin.h
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo $(gccplugin_objects_cppflags) -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) $(gccplugin_objects_cppflags) -c $<

scorep_compiler_gcc_plugin_end.$(OBJEXT): $(SRC_ROOT)src/adapters/compiler/scorep_compiler_gcc_plugin_end.c \
                                          $(SRC_ROOT)src/adapters/compiler/scorep_compiler_instrumentation_plugin.h
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo $(gccplugin_objects_cppflags) -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) $(gccplugin_objects_cppflags) -c $<

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scorep_compiler_gcc_plugin_begin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scorep_compiler_gcc_plugin_end.Po@am__quote@

endif HAVE_GCC_PLUGIN_SUPPORT

endif SCOREP_COMPILER_GNU


#--- LLVM specific settings
if SCOREP_COMPILER_CLANG

if !HAVE_LLVM_PLUGIN_SUPPORT

libscorep_adapter_compiler_mgmt_la_SOURCES +=                   \
    $(SRC_ROOT)src/adapters/compiler/scorep_compiler_gnu_init.c

else HAVE_LLVM_PLUGIN_SUPPORT

# dummy as long as plug-in is not functional
libscorep_adapter_compiler_mgmt_la_SOURCES += \
    $(SRC_ROOT)src/adapters/compiler/scorep_compiler_instrumentation_plugin.h \
    $(SRC_ROOT)src/adapters/compiler/scorep_compiler_llvm_plugin_init.c

endif HAVE_LLVM_PLUGIN_SUPPORT

endif SCOREP_COMPILER_CLANG

#--- Fujitsu specific settings, same as GNU non-plug-in
if SCOREP_COMPILER_FUJITSU
libscorep_adapter_compiler_mgmt_la_SOURCES +=                       \
    $(SRC_ROOT)src/adapters/compiler/scorep_compiler_gnu_init.c
endif SCOREP_COMPILER_FUJITSU


#--- IBM specific settings
if SCOREP_COMPILER_IBM
libscorep_adapter_compiler_mgmt_la_SOURCES +=                   \
    $(SRC_ROOT)src/adapters/compiler/scorep_compiler_ibm_init.c \
    $(SRC_ROOT)src/adapters/compiler/scorep_compiler_data.c     \
    $(SRC_ROOT)src/adapters/compiler/scorep_compiler_data.h
endif SCOREP_COMPILER_IBM


#--- Intel specific settings
if SCOREP_COMPILER_INTEL
libscorep_adapter_compiler_mgmt_la_SOURCES += \
    $(SRC_ROOT)src/adapters/compiler/scorep_compiler_intel_init.c
endif SCOREP_COMPILER_INTEL


#--- PGI specific settings
if SCOREP_COMPILER_PGI

if SCOREP_COMPILER_PGI_LLVM

libscorep_adapter_compiler_mgmt_la_SOURCES +=                       \
    $(SRC_ROOT)src/adapters/compiler/scorep_compiler_gnu_init.c

else !SCOREP_COMPILER_PGI_LLVM

libscorep_adapter_compiler_mgmt_la_SOURCES +=                   \
    $(SRC_ROOT)src/adapters/compiler/scorep_compiler_pgi_init.c

endif !SCOREP_COMPILER_PGI_LLVM

endif SCOREP_COMPILER_PGI


# --------------------------------------------------------------------
# event library for the compiler adapter

lib_LTLIBRARIES += libscorep_adapter_compiler_event.la

libscorep_adapter_compiler_event_la_SOURCES =

libscorep_adapter_compiler_event_la_CPPFLAGS = \
    $(AM_CPPFLAGS)                             \
    -I$(INC_ROOT)src/measurement/include       \
    -I$(PUBLIC_INC_DIR)                        \
    $(UTILS_CPPFLAGS)                          \
    -I$(INC_DIR_DEFINITIONS)

libscorep_adapter_compiler_event_la_LIBADD = \
    libscorep_measurement.la

if HAVE_SCOREP_COMPILER_INSTRUMENTATION_NEEDS_ADDR2LINE
libscorep_adapter_compiler_event_la_CPPFLAGS += \
    -I$(INC_DIR_SERVICES)                       \
    -I$(INC_DIR_COMMON_HASH)

libscorep_adapter_compiler_event_la_LIBADD += \
    libscorep_addr2line.la
else !HAVE_SCOREP_COMPILER_INSTRUMENTATION_NEEDS_ADDR2LINE
if HAVE_SCOREP_DEMANGLE
libscorep_adapter_compiler_event_la_CPPFLAGS += \
    -I$(INC_DIR_SERVICES)
endif HAVE_SCOREP_DEMANGLE
endif !HAVE_SCOREP_COMPILER_INSTRUMENTATION_NEEDS_ADDR2LINE

libscorep_adapter_compiler_event_la_LDFLAGS = \
    $(library_api_version_ldflags)


#--- Cray specific settings
if SCOREP_COMPILER_CRAY
libscorep_adapter_compiler_event_la_SOURCES += \
    $(SRC_ROOT)src/adapters/compiler/scorep_compiler_cray.c
endif SCOREP_COMPILER_CRAY

if PLATFORM_CRAY
if SCOREP_COMPILER_CLANG             # NDAO: Why is it related to LLVM ?!!
libscorep_adapter_compiler_event_la_SOURCES += \
    $(SRC_ROOT)src/adapters/compiler/scorep_compiler_cray.c
endif SCOREP_COMPILER_CLANG
endif PLATFORM_CRAY

#--- GNU specific settings
if SCOREP_COMPILER_GNU

if !HAVE_GCC_PLUGIN_SUPPORT

libscorep_adapter_compiler_event_la_SOURCES += \
    $(SRC_ROOT)src/adapters/compiler/scorep_compiler_gnu.c

else HAVE_GCC_PLUGIN_SUPPORT

libscorep_adapter_compiler_event_la_SOURCES += \
    $(SRC_ROOT)src/adapters/compiler/scorep_compiler_instrumentation_plugin.c

endif HAVE_GCC_PLUGIN_SUPPORT

endif SCOREP_COMPILER_GNU

#--- Clang specific settings
if SCOREP_COMPILER_CLANG

if !HAVE_LLVM_PLUGIN_SUPPORT

libscorep_adapter_compiler_event_la_SOURCES += \
    $(SRC_ROOT)src/adapters/compiler/scorep_compiler_gnu.c

else HAVE_LLVM_PLUGIN_SUPPORT

libscorep_adapter_compiler_event_la_SOURCES += \
    $(SRC_ROOT)src/adapters/compiler/scorep_compiler_instrumentation_plugin.c

endif HAVE_LLVM_PLUGIN_SUPPORT

endif SCOREP_COMPILER_CLANG

#--- IBM specific settings
if SCOREP_COMPILER_IBM

libscorep_adapter_compiler_event_la_SOURCES += \
    $(SRC_ROOT)src/adapters/compiler/scorep_compiler_ibm.c

libscorep_adapter_compiler_event_la_LIBADD += \
    $(SCOREP_LIBBFD_LIBS)
libscorep_adapter_compiler_event_la_LDFLAGS += \
    $(SCOREP_LIBBFD_LDFLAGS)

endif SCOREP_COMPILER_IBM

#--- Intel specific settings
if SCOREP_COMPILER_INTEL
libscorep_adapter_compiler_event_la_SOURCES += \
    $(SRC_ROOT)src/adapters/compiler/scorep_compiler_intel.c
endif SCOREP_COMPILER_INTEL

#--- PGI specific settings
if SCOREP_COMPILER_PGI

if SCOREP_COMPILER_PGI_LLVM

libscorep_adapter_compiler_event_la_SOURCES += \
    $(SRC_ROOT)src/adapters/compiler/scorep_compiler_gnu.c

else !SCOREP_COMPILER_PGI_LLVM

libscorep_adapter_compiler_event_la_SOURCES += \
    $(SRC_ROOT)src/adapters/compiler/scorep_compiler_pgi.c

libscorep_adapter_compiler_event_la_LIBADD += \
    $(SCOREP_LIBBFD_LIBS)
libscorep_adapter_compiler_event_la_LDFLAGS += \
    $(SCOREP_LIBBFD_LDFLAGS)

endif !SCOREP_COMPILER_PGI_LLVM

endif SCOREP_COMPILER_PGI

#--- Fujitsu specific settings, same as GNU non-plug-in
if SCOREP_COMPILER_FUJITSU
libscorep_adapter_compiler_event_la_SOURCES += \
    $(SRC_ROOT)src/adapters/compiler/scorep_compiler_gnu.c
endif SCOREP_COMPILER_FUJITSU

endif HAVE_COMPILER_INSTRUMENTATION

EXTRA_DIST += \
    $(SRC_ROOT)src/adapters/compiler/scorep_compiler_demangle.h \
    $(SRC_ROOT)src/adapters/compiler/scorep_compiler_gcc_plugin_begin.c \
    $(SRC_ROOT)src/adapters/compiler/scorep_compiler_gcc_plugin_end.c \
    $(SRC_ROOT)src/adapters/compiler/scorep_compiler_gnu.h \
    $(SRC_ROOT)src/adapters/compiler/scorep_compiler_gnu.inc.c
